#include <iostream>
#include <chrono>
using namespace std;
using namespace std::chrono;

struct node{
    int data;
    struct node *link;
};

struct node *top = NULL;

void push(int element){
    struct node *newnode = new struct node;
    newnode-> data = element;
    newnode-> link = top;
    top = newnode;
}

void pop() {
   if(top==NULL){
    cout<<"Stack Underflow"<<endl;
   }
   else {
      cout<<top->data <<endl;
      top = top->link;
   }
}

void Display() {
   struct node* ptr;
   if(top==NULL){
      cout<<"Stack is empty";
   }
   else {
      ptr = top;
      while (ptr != NULL) {
         cout<< ptr->data <<" ";
         ptr = ptr->link;
      }
   }
   cout<<endl;
}

int main(){
  auto start = high_resolution_clock::now();
  
  push(8);
  push(10);
  push(5);
  push(11);
  push(15);
  push(23);
  push(6);
  push(18);
  push(20);
  push(17);
  Display();
  pop();
  pop();
  pop();
  pop();
  pop();
  Display();
  push(4);
  push(30);
  push(3);
  push(1);
  Display();

  auto stop = high_resolution_clock::now();
  auto duration = duration_cast<microseconds>(stop - start);
 
  cout << "Time : "<< duration.count() << " microseconds" << endl;
}